{"version":3,"sources":["components/Nav/Nav.tsx","App.tsx","components/Loader/Loader.tsx","api.ts","components/Table/Table.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","Nav","role","App","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Table","useState","undefined","peoples","setPeoples","peoplesError","setPeoplesError","useParams","selectedPersone","useEffect","people","catch","getPersoneInfo","persone","name","toLowerCase","split","join","born","length","map","sex","died","motherName","fatherName","father","find","person","mother","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.56693b6f.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  to: string;\n  text: string\n};\n\nconst PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n    to={to}\n  >\n    {text}\n  </NavLink>\n);\n\nexport const Nav = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import { Outlet } from 'react-router-dom';\n\nimport { Nav } from './components/Nav/Nav';\n\nimport './App.scss';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Nav />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport classNames from 'classnames';\n\nimport { Link, useParams } from 'react-router-dom';\n\nimport { Loader } from '../Loader';\n\nimport { getPeople } from '../../api';\n\nimport { Person } from '../../types';\n\nexport const Table = () => {\n  const [peoples, setPeoples] = useState<Person[] | undefined>(undefined);\n  const [peoplesError, setPeoplesError] = useState(false);\n\n  const { selectedPersone = '' } = useParams();\n\n  useEffect(() => {\n    getPeople()\n      .then((people: Person[]) => {\n        setPeoples(people);\n      })\n      .catch(() => {\n        setPeoples([]);\n        setPeoplesError(true);\n      });\n  }, []);\n\n  const getPersoneInfo = (persone: Person) => `${persone.name.toLowerCase().split(' ').join('-')}-${persone.born}`;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"box table-container\">\n        {peoples\n          ? (peoplesError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )) || (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              {peoples?.length === 0\n                ? (\n                  <p data-cy=\"noPeopleMessage\">\n                    There are no people on the server\n                  </p>\n                ) : (\n                  <tbody>\n                    {peoples.map((persone) => {\n                      const {\n                        name,\n                        sex,\n                        born,\n                        died,\n                        motherName,\n                        fatherName,\n                      } = persone;\n\n                      const father = peoples\n                        .find(person => person.name === fatherName);\n                      const mother = peoples\n                        .find(person => person.name === motherName);\n\n                      return (\n                        <tr\n                          data-cy=\"person\"\n                          key={name}\n                          className={classNames(\n                            { 'has-background-warning': selectedPersone === `${getPersoneInfo(persone)}` },\n                          )}\n                        >\n                          <td>\n                            <Link\n                              to={`#/people/${getPersoneInfo(persone)}`}\n                              className={classNames(\n                                { 'has-text-danger': sex === 'f' },\n                              )}\n                            >\n                              {name}\n                            </Link>\n                          </td>\n\n                          <td>{sex}</td>\n                          <td>{born}</td>\n                          <td>{died}</td>\n                          {\n                            mother\n                              ? (\n                                <td>\n                                  <Link\n                                    to={`#/people/${getPersoneInfo(mother)}`}\n                                    className=\"has-text-danger\"\n                                  >\n                                    {motherName || '-'}\n                                  </Link>\n                                </td>\n                              )\n                              : <td>{motherName || '-'}</td>\n                          }\n                          {\n                            father\n                              ? (\n                                <td>\n                                  <Link to={`#/people/${getPersoneInfo(father)}`}>\n                                    {fatherName || '-'}\n                                  </Link>\n                                </td>\n                              )\n                              : <td>{fatherName || '-'}</td>\n                          }\n\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                )}\n            </table>\n          )\n          : <Loader />}\n      </div>\n    </>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter as Router,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { Table } from './components/Table/Table';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route\n            path=\"people\"\n            element={<Table />}\n          >\n            <Route index />\n            <Route path=\":selectedPersone\" />\n          </Route>\n\n          <Route\n            path=\"*\"\n            element={<h1 className=\"title\">Page not found</h1>}\n          />\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}